# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    working_directory: ~/ce-todo-list-project
    docker:
      - image: cimg/openjdk:17.0.7
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run:
          name: Start Docker Compose
          command: |
            docker-compose up -d

      - deploy:
          name: Build and push Docker image
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t circleci/cci-demo-docker:$TAG .
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push circleci/cci-demo-docker:$TAG